{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","gutterBottom","infectText","variant","start","end","value","duration","separator","Date","toDateString","recoverText","deathText","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9d1d8cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2sAap\",\"card\":\"Cards_card__16wgd\",\"infected\":\"Cards_infected__1d2sh\",\"recovered\":\"Cards_recovered__32CFG\",\"deaths\":\"Cards_deaths___Vnp1\",\"infectText\":\"Cards_infectText__1jWi0\",\"recoverText\":\"Cards_recoverText__3dGFT\",\"deathText\":\"Cards_deathText__1s4Tz\"};","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    StylesProvider,\r\n} from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={StylesProvider.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={cx(styles.card, styles.infected)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography gutterBottom>Infected</Typography>\r\n                        <Typography className={styles.infectText} variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of active cases of COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={cx(styles.card, styles.recovered)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography gutterBottom>Recovered</Typography>\r\n                        <Typography className={styles.recoverText} variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of recovered cases from COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    component={Card}\r\n                    xs={12}\r\n                    md={3}\r\n                    className={cx(styles.card, styles.deaths)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography gutterBottom>Deaths</Typography>\r\n                        <Typography className={styles.deathText} variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={1.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography>\r\n                            {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            Number of deaths caused by COVID-19\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const {\r\n            data: { confirmed, recovered, deaths, lastUpdate },\r\n        } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {\r\n            data: { countries },\r\n        } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = dailyData.length ? (\r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [\r\n                    {\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: \"Infected\",\r\n                        backgroundColor: \"#12cad650\",\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: \"Deaths\",\r\n                        backgroundColor: \"#ff333380\",\r\n                        fill: true,\r\n                    },\r\n                ],\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    const barChart = confirmed ? (\r\n        <Bar\r\n            data={{\r\n                labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"People\",\r\n                        backgroundColor: [\r\n                            \"#12cad690\",\r\n                            \"#00e67390\",\r\n                            \"#ff333390\",\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    },\r\n                ],\r\n            }}\r\n            options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n        />\r\n    ) : null;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\" \"}\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect\r\n                defaultValue=\"\"\r\n                onChange={(e) => handleCountryChange(e.target.value)}\r\n            >\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => (\r\n                    <option key={i} value={country}>\r\n                        {country}\r\n                    </option>\r\n                ))}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport coronaImage from \"./images/image.png\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    };\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img\r\n                    className={styles.image}\r\n                    src={coronaImage}\r\n                    alt=\"COVID-19\"\r\n                />\r\n                <hr />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Cards data={data} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2N7Z7\",\"image\":\"App_image__1WAC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2139b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__qV5pN\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}